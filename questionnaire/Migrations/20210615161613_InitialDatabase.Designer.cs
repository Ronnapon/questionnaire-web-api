// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tele_consult.Data;

namespace questionnaire.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210615161613_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("questionnaire.Data.Models.Answers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnswerId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("answers");
                });

            modelBuilder.Entity("questionnaire.Data.Models.Choices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChoiceId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Choice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("choices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Choice = "Mr.",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Choice = "Ms.",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Choice = "Mrs.",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            Choice = "Thailand",
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 5,
                            Choice = "America",
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 6,
                            Choice = "Japan",
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 7,
                            Choice = "Programmer",
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 8,
                            Choice = "Marketting",
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 9,
                            Choice = "Software Engineer",
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 10,
                            Choice = "Sales Manager",
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 11,
                            Choice = "SoftwareHourse",
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 12,
                            Choice = "Market",
                            QuestionId = 10
                        });
                });

            modelBuilder.Entity("questionnaire.Data.Models.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuestionId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 369, DateTimeKind.Local).AddTicks(6806),
                            Question = "Title"
                        },
                        new
                        {
                            Id = 2,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 370, DateTimeKind.Local).AddTicks(7592),
                            Question = "First Name"
                        },
                        new
                        {
                            Id = 3,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 370, DateTimeKind.Local).AddTicks(7613),
                            Question = "Last Name"
                        },
                        new
                        {
                            Id = 4,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 370, DateTimeKind.Local).AddTicks(7616),
                            Question = "Date of birth"
                        },
                        new
                        {
                            Id = 5,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 370, DateTimeKind.Local).AddTicks(7618),
                            Question = "Country of residence"
                        },
                        new
                        {
                            Id = 6,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 370, DateTimeKind.Local).AddTicks(7619),
                            Question = "House Address"
                        },
                        new
                        {
                            Id = 7,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 370, DateTimeKind.Local).AddTicks(7621),
                            Question = "Work Address"
                        },
                        new
                        {
                            Id = 8,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 370, DateTimeKind.Local).AddTicks(7623),
                            Question = "Occupation"
                        },
                        new
                        {
                            Id = 9,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 370, DateTimeKind.Local).AddTicks(7624),
                            Question = "Job Title"
                        },
                        new
                        {
                            Id = 10,
                            DateAdd = new DateTime(2021, 6, 15, 23, 16, 13, 370, DateTimeKind.Local).AddTicks(7626),
                            Question = "Business Type"
                        });
                });

            modelBuilder.Entity("questionnaire.Data.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLogin")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("questionnaire.Data.Models.Choices", b =>
                {
                    b.HasOne("questionnaire.Data.Models.Questions", "question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("questionnaire.Data.Models.Questions", b =>
                {
                    b.Navigation("Choices");
                });
#pragma warning restore 612, 618
        }
    }
}
